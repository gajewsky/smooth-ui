{"version":3,"sources":["webpack:///./src/pages/docs/form.mdx","webpack:///./node_modules/smooth-doc/src/layouts/docs.js"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","aria-hidden","height","version","viewBox","width","fillRule","d","of","Form","FormField","FormFieldLabel","FormCheck","FormCheckLabel","isMDXComponent"],"mappings":"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","file":"component---src-pages-docs-form-mdx-39588dd9e938c2a15622.js","sourcesContent":["import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/gajewsky/code/smooth-ui/website/node_modules/smooth-doc/src/layouts/docs.js\";\nimport { Form, FormCheck, FormCheckLabel, FormField, FormFieldLabel } from 'smooth-ui-sc-next';\nimport { LiveConfig } from 'smooth-doc/components';\nimport { Props } from '../../components/Props';\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n\n    <h1 {...{\n      \"id\": \"form\"\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#form\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }}><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fillRule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>{`Form`}</h1>\n    <h2 {...{\n      \"id\": \"basic\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#basic\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }}><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fillRule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>{`Basic`}</h2>\n    <p><inlineCode parentName=\"p\">{`Form`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`FormField`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`FormFieldLabel`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`FormCheck`}</inlineCode>{`, `}<inlineCode parentName=\"p\">{`FormCheckLabel`}</inlineCode>{` are the foundations of form layout. Components are smart and automatically link labels to form controls if a name is provided. A unique `}<inlineCode parentName=\"p\">{`id`}</inlineCode>{` is automatically generated, `}<inlineCode parentName=\"p\">{`htmlFor`}</inlineCode>{` is added to `}<inlineCode parentName=\"p\">{`label`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`aria-labelledby`}</inlineCode>{` attributes are added to controls.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live noInline\",\n        \"live\": true,\n        \"noInline\": true\n      }}>{`import React from 'react'\nimport {\n  Form,\n  FormCheck,\n  FormCheckLabel,\n  FormField,\n  FormFieldLabel,\n  Input,\n  Checkbox,\n  CheckboxGroup,\n  Radio,\n  RadioGroup,\n  useRadioState,\n} from '@smooth-ui/core-sc'\n\nfunction Example() {\n  const radio = useRadioState()\n  const [vegetables, setVegetables] = React.useState(new Set())\n  const handleVegetableChange = React.useCallback(value => () => {\n    setVegetables(vegetables => {\n      const next = new Set(vegetables)\n      if (next.has(value)) {\n        next.delete(value)\n      } else {\n        next.add(value)\n      }\n      return next\n    })\n  })\n  return (\n    <Form>\n      <FormField>\n        <FormFieldLabel name=\"name\">Name</FormFieldLabel>\n        <Input name=\"name\" />\n      </FormField>\n      <FormField>\n        <FormFieldLabel name=\"firstname\">Firstname</FormFieldLabel>\n        <Input name=\"firstname\" />\n      </FormField>\n      <FormField>\n        <FormFieldLabel id=\"vegetables\">Vegetables</FormFieldLabel>\n        <CheckboxGroup aria-labelledby=\"vegetables\">\n          <FormCheck>\n            <Checkbox\n              name=\"vegetables\"\n              checked={vegetables.has('lettuce')}\n              onChange={handleVegetableChange('lettuce')}\n              value=\"lettuce\"\n            />\n            <FormCheckLabel name=\"vegetables\">lettuce</FormCheckLabel>\n          </FormCheck>\n          <FormCheck>\n            <Checkbox\n              name=\"vegetables\"\n              checked={vegetables.has('cabbage')}\n              onChange={handleVegetableChange('cabbage')}\n              value=\"cabbage\"\n            />\n            <FormCheckLabel name=\"vegetables\">cabbage</FormCheckLabel>\n          </FormCheck>\n        </CheckboxGroup>\n      </FormField>\n      <FormField>\n        <FormFieldLabel id=\"fruits\">Fruits</FormFieldLabel>\n        <RadioGroup {...radio} aria-labelledby=\"fruits\">\n          <FormCheck>\n            <Radio {...radio} name=\"fruit\" value=\"apple\" />\n            <FormCheckLabel name=\"fruit\">apple</FormCheckLabel>\n          </FormCheck>\n          <FormCheck>\n            <Radio {...radio} name=\"fruit\" value=\"orange\" />\n            <FormCheckLabel name=\"fruit\">orange</FormCheckLabel>\n          </FormCheck>\n          <FormCheck>\n            <Radio {...radio} name=\"fruit\" value=\"watermelon\" />\n            <FormCheckLabel name=\"fruit\">watermelon</FormCheckLabel>\n          </FormCheck>\n        </RadioGroup>\n      </FormField>\n    </Form>\n  )\n}\n\nrender(<Example />)\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"horizontal-form\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#horizontal-form\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }}><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fillRule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>{`Horizontal form`}</h2>\n    <p>{`Create horizontal forms with the system by adding the `}<inlineCode parentName=\"p\">{`row`}</inlineCode>{` property to `}<inlineCode parentName=\"p\">{`FormField`}</inlineCode>{` and using the `}<inlineCode parentName=\"p\">{`col`}</inlineCode>{` property to specify the width of your labels and controls. `}<inlineCode parentName=\"p\">{`FormFieldLabel`}</inlineCode>{` are automatically vertically centered with their associated form controls when `}<inlineCode parentName=\"p\">{`col`}</inlineCode>{` is used.\nYou can invert this behaviour by specifying `}<inlineCode parentName=\"p\">{`py={0}`}</inlineCode>{`.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live noInline\",\n        \"live\": true,\n        \"noInline\": true\n      }}>{`import React from 'react'\nimport {\n  Form,\n  FormCheck,\n  FormCheckLabel,\n  FormField,\n  FormFieldLabel,\n  Input,\n  Checkbox,\n  CheckboxGroup,\n  Radio,\n  RadioGroup,\n  useRadioState,\n} from '@smooth-ui/core-sc'\n\nfunction Example() {\n  const radio = useRadioState()\n  const [vegetables, setVegetables] = React.useState(new Set())\n  const handleVegetableChange = React.useCallback(value => () => {\n    setVegetables(vegetables => {\n      const next = new Set(vegetables)\n      if (next.has(value)) {\n        next.delete(value)\n      } else {\n        next.add(value)\n      }\n      return next\n    })\n  })\n  return (\n    <Form>\n      <FormField row>\n        <FormFieldLabel col name=\"name\">\n          Name\n        </FormFieldLabel>\n        <Input col={0.8} name=\"name\" />\n      </FormField>\n      <FormField row>\n        <FormFieldLabel col name=\"firstname\">\n          Firstname\n        </FormFieldLabel>\n        <Input col={0.8} name=\"firstname\" />\n      </FormField>\n      <FormField row>\n        <FormFieldLabel col py={0} id=\"vegetables\">\n          Vegetables\n        </FormFieldLabel>\n        <CheckboxGroup col={0.8} aria-labelledby=\"vegetables\">\n          <FormCheck>\n            <Checkbox\n              name=\"vegetables\"\n              checked={vegetables.has('lettuce')}\n              onChange={handleVegetableChange('lettuce')}\n              value=\"lettuce\"\n            />\n            <FormCheckLabel name=\"vegetables\">lettuce</FormCheckLabel>\n          </FormCheck>\n          <FormCheck>\n            <Checkbox\n              name=\"vegetables\"\n              checked={vegetables.has('cabbage')}\n              onChange={handleVegetableChange('cabbage')}\n              value=\"cabbage\"\n            />\n            <FormCheckLabel name=\"vegetables\">cabbage</FormCheckLabel>\n          </FormCheck>\n        </CheckboxGroup>\n      </FormField>\n      <FormField row>\n        <FormFieldLabel col py={0} id=\"fruits\">\n          Fruits\n        </FormFieldLabel>\n        <RadioGroup {...radio} col={0.8} aria-labelledby=\"fruits\">\n          <FormCheck>\n            <Radio {...radio} name=\"fruit\" value=\"apple\" />\n            <FormCheckLabel name=\"fruit\">apple</FormCheckLabel>\n          </FormCheck>\n          <FormCheck>\n            <Radio {...radio} name=\"fruit\" value=\"orange\" />\n            <FormCheckLabel name=\"fruit\">orange</FormCheckLabel>\n          </FormCheck>\n          <FormCheck>\n            <Radio {...radio} name=\"fruit\" value=\"watermelon\" />\n            <FormCheckLabel name=\"fruit\">watermelon</FormCheckLabel>\n          </FormCheck>\n        </RadioGroup>\n      </FormField>\n    </Form>\n  )\n}\n\nrender(<Example />)\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"scaled-forms\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#scaled-forms\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }}><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fillRule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>{`Scaled forms`}</h2>\n    <p>{`All components accept a property `}<inlineCode parentName=\"p\">{`scale`}</inlineCode>{` to scale properly with form controls.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live noInline\",\n        \"live\": true,\n        \"noInline\": true\n      }}>{`import React from 'react'\nimport {\n  Form,\n  FormField,\n  FormFieldLabel,\n  Input,\n  FormCheck,\n  FormCheckLabel,\n  Checkbox,\n  useCheckboxState,\n  Button,\n} from '@smooth-ui/core-sc'\n\nfunction Example() {\n  const checkbox = useCheckboxState()\n  return (\n    <Form>\n      <FormField row scale=\"lg\">\n        <FormFieldLabel col scale=\"lg\" name=\"email\">\n          Email\n        </FormFieldLabel>\n        <Input col={0.8} scale=\"lg\" type=\"email\" name=\"email\" />\n      </FormField>\n      <FormField row scale=\"lg\">\n        <FormFieldLabel col scale=\"lg\" name=\"password\">\n          Password\n        </FormFieldLabel>\n        <Input col={0.8} scale=\"lg\" type=\"password\" name=\"password\" />\n      </FormField>\n      <FormField row scale=\"lg\">\n        <Button type=\"submit\" ml=\"20%\" col={0.4} scale=\"lg\">\n          Submit\n        </Button>\n        <FormCheck col={0.4} pl=\"20rpx\">\n          <Checkbox {...checkbox} scale=\"lg\" name=\"remember\" />\n          <FormCheckLabel scale=\"lg\" name=\"remember\">\n            Remember me\n          </FormCheckLabel>\n        </FormCheck>\n      </FormField>\n    </Form>\n  )\n}\n\nrender(<Example />)\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"horizontal-radios--checkboxes\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#horizontal-radios--checkboxes\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }}><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fillRule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>{`Horizontal Radios & Checkboxes`}</h2>\n    <p>{`Use `}<inlineCode parentName=\"p\">{`orientation: \"horizontal\"`}</inlineCode>{` on `}<inlineCode parentName=\"p\">{`useRadioState`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`aria-orientation=\"horizontal\"`}</inlineCode>{` on `}<inlineCode parentName=\"p\">{`RadioGroup`}</inlineCode>{` and `}<inlineCode parentName=\"p\">{`CheckboxGroup`}</inlineCode>{` to display controls horizontally.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live noInline\",\n        \"live\": true,\n        \"noInline\": true\n      }}>{`import React from 'react'\nimport {\n  Form,\n  FormCheck,\n  FormCheckLabel,\n  FormField,\n  FormFieldLabel,\n  Input,\n  Checkbox,\n  CheckboxGroup,\n  Radio,\n  RadioGroup,\n  useRadioState,\n} from '@smooth-ui/core-sc'\n\nfunction Example() {\n  const radio = useRadioState({ orientation: 'horizontal' })\n  const [vegetables, setVegetables] = React.useState(new Set())\n  const handleVegetableChange = React.useCallback(value => () => {\n    setVegetables(vegetables => {\n      const next = new Set(vegetables)\n      if (next.has(value)) {\n        next.delete(value)\n      } else {\n        next.add(value)\n      }\n      return next\n    })\n  })\n  return (\n    <Form>\n      <FormField row>\n        <FormFieldLabel col name=\"name\">\n          Name\n        </FormFieldLabel>\n        <Input col={0.8} name=\"name\" />\n      </FormField>\n      <FormField row>\n        <FormFieldLabel col name=\"firstname\">\n          Firstname\n        </FormFieldLabel>\n        <Input col={0.8} name=\"firstname\" />\n      </FormField>\n      <FormField row>\n        <FormFieldLabel col py={0} id=\"vegetables\">\n          Vegetables\n        </FormFieldLabel>\n        <CheckboxGroup\n          col={0.8}\n          aria-orientation=\"horizontal\"\n          aria-labelledby=\"vegetables\"\n        >\n          <FormCheck>\n            <Checkbox\n              name=\"vegetables\"\n              checked={vegetables.has('lettuce')}\n              onChange={handleVegetableChange('lettuce')}\n              value=\"lettuce\"\n            />\n            <FormCheckLabel name=\"vegetables\">lettuce</FormCheckLabel>\n          </FormCheck>\n          <FormCheck>\n            <Checkbox\n              name=\"vegetables\"\n              checked={vegetables.has('cabbage')}\n              onChange={handleVegetableChange('cabbage')}\n              value=\"cabbage\"\n            />\n            <FormCheckLabel name=\"vegetables\">cabbage</FormCheckLabel>\n          </FormCheck>\n        </CheckboxGroup>\n      </FormField>\n      <FormField row>\n        <FormFieldLabel col py={0} id=\"fruits\">\n          Fruits\n        </FormFieldLabel>\n        <RadioGroup\n          {...radio}\n          col={0.8}\n          aria-orientation=\"horizontal\"\n          aria-labelledby=\"fruits\"\n        >\n          <FormCheck>\n            <Radio {...radio} name=\"fruit\" value=\"apple\" />\n            <FormCheckLabel name=\"fruit\">apple</FormCheckLabel>\n          </FormCheck>\n          <FormCheck>\n            <Radio {...radio} name=\"fruit\" value=\"orange\" />\n            <FormCheckLabel name=\"fruit\">orange</FormCheckLabel>\n          </FormCheck>\n          <FormCheck>\n            <Radio {...radio} name=\"fruit\" value=\"watermelon\" />\n            <FormCheckLabel name=\"fruit\">watermelon</FormCheckLabel>\n          </FormCheck>\n        </RadioGroup>\n      </FormField>\n    </Form>\n  )\n}\n\nrender(<Example />)\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"accessibility\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#accessibility\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }}><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fillRule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>{`Accessibility`}</h2>\n    <p>{`All forms components follow `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.w3.org/TR/wai-aria-1.1/\"\n      }}>{`WAI-ARIA Pattern`}</a>{` to ensure a complete accesibility of your forms.`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Role `}<inlineCode parentName=\"li\">{`form`}</inlineCode>{` is automatically added to `}<inlineCode parentName=\"li\">{`form`}</inlineCode>{` if not a native `}<inlineCode parentName=\"li\">{`form`}</inlineCode>{` element`}</li>\n      <li parentName=\"ul\"><inlineCode parentName=\"li\">{`aria-labelledby`}</inlineCode>{` is automatically added to `}<inlineCode parentName=\"li\">{`label`}</inlineCode>{` when a name is provided`}</li>\n    </ul>\n    <h2 {...{\n      \"id\": \"api\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#api\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }}><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fillRule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>{`API`}</h2>\n    <h3 {...{\n      \"id\": \"form-1\"\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#form-1\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }}><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fillRule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>{`Form`}</h3>\n    <Props of={Form} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"formfield\"\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#formfield\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }}><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fillRule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>{`FormField`}</h3>\n    <Props of={FormField} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"formfieldlabel\"\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#formfieldlabel\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }}><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fillRule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>{`FormFieldLabel`}</h3>\n    <Props of={FormFieldLabel} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"formcheck\"\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#formcheck\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }}><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fillRule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>{`FormCheck`}</h3>\n    <Props of={FormCheck} mdxType=\"Props\" />\n    <h3 {...{\n      \"id\": \"formchecklabel\"\n    }}><a parentName=\"h3\" {...{\n        \"href\": \"#formchecklabel\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }}><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fillRule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>{`FormCheckLabel`}</h3>\n    <Props of={FormCheckLabel} mdxType=\"Props\" />\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      ","/* eslint-disable */\nexport { DocLayout as default } from '../components';"],"sourceRoot":""}