{"version":3,"sources":["webpack:///./node_modules/smooth-doc/src/layouts/docs.js","webpack:///./src/pages/docs/as-property.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","aria-hidden","height","version","viewBox","width","fillRule","d","isMDXComponent"],"mappings":"2FAAA,qD,sNCMO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,mBACL,+BAAGC,WAAW,MAAS,CACtB,KAAQ,mBACR,eAAe,EACf,UAAa,WACZ,mBAAKC,cAAY,OAAOC,OAAO,KAAKC,QAAQ,MAAMC,QAAQ,YAAYC,MAAM,MAAK,oBAAMC,SAAS,UAAUC,EAAE,oVANjH,qBAOA,uIAAsH,0BAAYP,WAAW,KAAvB,UAAtH,gCAAyM,+BAAGA,WAAW,KAAQ,CAC3N,KAAQ,wDAD6L,OAE5L,0BAAYA,WAAW,KAAvB,QAF4L,sBAAzM,KAGA,iBAAQ,CACN,GAAM,SACL,+BAAGA,WAAW,MAAS,CACtB,KAAQ,SACR,eAAe,EACf,UAAa,WACZ,mBAAKC,cAAY,OAAOC,OAAO,KAAKC,QAAQ,MAAMC,QAAQ,YAAYC,MAAM,MAAK,oBAAMC,SAAS,UAAUC,EAAE,oVANjH,SAOA,mDAAkC,0BAAYP,WAAW,KAAvB,eAAlC,0EACA,yCAAwB,0BAAYA,WAAW,KAAvB,SAAxB,cAAwF,0BAAYA,WAAW,KAAvB,QAAxF,oBACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,gBACd,MAAQ,EACR,UAAY,IAJX,uOAkBL,8BACE,iBAAGA,WAAW,cAAd,OAAmC,0BAAYA,WAAW,KAAvB,MAAnC,4BAA8G,0BAAYA,WAAW,KAAvB,qBAA9G,SAAqL,0BAAYA,WAAW,KAAvB,eAArL,2CAMNJ,EAAWY,gBAAiB","file":"component---src-pages-docs-as-property-mdx-58d95c531df21580d1d6.js","sourcesContent":["/* eslint-disable */\nexport { DocLayout as default } from '../components';","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/gajewsky/code/smooth-ui/website/node_modules/smooth-doc/src/layouts/docs.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"the-as-property\"\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#the-as-property\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }}><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fillRule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>{`The \"as\" property`}</h1>\n    <p>{`Sometimes you may want to use a component but the resulting HTML tag is not the good one. Or you want to use a `}<inlineCode parentName=\"p\">{`Button`}</inlineCode>{` with another component like `}<a parentName=\"p\" {...{\n        \"href\": \"https://reacttraining.com/react-router/web/api/Link\"\n      }}>{`the `}<inlineCode parentName=\"a\">{`Link`}</inlineCode>{` from React Router`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"usage\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#usage\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }}><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fillRule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>{`Usage`}</h2>\n    <p>{`Every components accepts a `}<inlineCode parentName=\"p\">{`forwardedAs`}</inlineCode>{` property, it defines the underlying component used in each component.`}</p>\n    <p>{`An example of an `}<inlineCode parentName=\"p\">{`Alert`}</inlineCode>{` that uses `}<inlineCode parentName=\"p\">{`span`}</inlineCode>{` as a component.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live noInline\",\n        \"live\": true,\n        \"noInline\": true\n      }}>{`import React from 'react'\nimport { Alert } from '@smooth-ui/core-sc'\n\nfunction Example() {\n  return (\n    <Alert forwardedAs=\"span\" variant=\"primary\">\n      A span alert\n    </Alert>\n  )\n}\n\nrender(<Example />)\n`}</code></pre>\n    <blockquote>\n      <p parentName=\"blockquote\">{`The `}<inlineCode parentName=\"p\">{`as`}</inlineCode>{` property is reserved to `}<inlineCode parentName=\"p\">{`styled-components`}</inlineCode>{`, use `}<inlineCode parentName=\"p\">{`forwardedAs`}</inlineCode>{` to replace the underlying component.`}</p>\n    </blockquote>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}