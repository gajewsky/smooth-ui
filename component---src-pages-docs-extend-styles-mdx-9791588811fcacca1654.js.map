{"version":3,"sources":["webpack:///./node_modules/smooth-doc/src/layouts/docs.js","webpack:///./src/pages/docs/extend-styles.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","aria-hidden","height","version","viewBox","width","fillRule","d","isMDXComponent"],"mappings":"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","file":"component---src-pages-docs-extend-styles-mdx-9791588811fcacca1654.js","sourcesContent":["/* eslint-disable */\nexport { DocLayout as default } from '../components';","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/gajewsky/code/smooth-ui/website/node_modules/smooth-doc/src/layouts/docs.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"extend-styles\"\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#extend-styles\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }}><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fillRule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>{`Extend Styles`}</h1>\n    <p>{`Smooth UI’s power lies in its ability to easily extend components’ styles.`}</p>\n    <h2 {...{\n      \"id\": \"use-system-props\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#use-system-props\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }}><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fillRule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>{`Use system props`}</h2>\n    <p>{`System props are probably the easiest way to extend a component.`}</p>\n    <p>{`For example, you can define the width of a button:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live noInline\",\n        \"live\": true,\n        \"noInline\": true\n      }}>{`import React from 'react'\nimport { Button } from '@smooth-ui/core-sc'\n\nfunction Example() {\n  return <Button width={200}>Hello world</Button>\n}\n\nrender(<Example />)\n`}</code></pre>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"/smooth-ui/docs/system/\"\n      }}>{`system props documentation`}</a>{` to learn how to use it.`}</p>\n    <h2 {...{\n      \"id\": \"local-override-using-style\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#local-override-using-style\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }}><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fillRule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>{`Local override using style`}</h2>\n    <p>{`Inline styles are still a good approach for a lot of use-cases. They can be used for very specific changes that don't need media queries or auto-prefixer. All components supports inline style using `}<inlineCode parentName=\"p\">{`style`}</inlineCode>{` property.`}</p>\n    <p>{`An example of inline style to change the `}<inlineCode parentName=\"p\">{`padding`}</inlineCode>{` of a button:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live noInline\",\n        \"live\": true,\n        \"noInline\": true\n      }}>{`import React from 'react'\nimport { Button } from '@smooth-ui/core-sc'\n\nfunction Example() {\n  return <Button style={{ padding: 20 }}>Hello world</Button>\n}\n\nrender(<Example />)\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"override-values-in-theme\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#override-values-in-theme\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }}><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fillRule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>{`Override values in theme`}</h2>\n    <p>{`To extend style, the cleanest way is probably to use the theming feature of Smooth UI. It allows you to change global settings that will impact all components.`}</p>\n    <p>{`Example of possible changes using theme:`}</p>\n    <ul>\n      <li parentName=\"ul\">{`Modify `}<inlineCode parentName=\"li\">{`primary`}</inlineCode>{` color`}</li>\n      <li parentName=\"ul\">{`Modify breakpoints`}</li>\n      <li parentName=\"ul\">{`Modify form control margins`}</li>\n      <li parentName=\"ul\">{`Modify the focus glow on controls`}</li>\n      <li parentName=\"ul\">{`...`}</li>\n    </ul>\n    <p>{`For example, you can change the primary color:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live noInline\",\n        \"live\": true,\n        \"noInline\": true\n      }}>{`import React from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport { Button } from '@smooth-ui/core-sc'\n\nconst theme = {\n  colors: {\n    primary: 'blue',\n  },\n}\n\nfunction Example() {\n  return <Button>Hello world</Button>\n}\n\nrender(\n  <ThemeProvider theme={theme}>\n    <Example />\n  </ThemeProvider>,\n)\n`}</code></pre>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"/smooth-ui/docs/theming/\"\n      }}>{`theming documentation`}</a>{` to learn how to use theme.`}</p>\n    <h2 {...{\n      \"id\": \"override-components-style-in-theme\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#override-components-style-in-theme\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }}><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fillRule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>{`Override components style in theme`}</h2>\n    <p>{`All components can be overrided directly in the theme.`}</p>\n    <p>{`In the following example, the alert is now just something colored in `}<inlineCode parentName=\"p\">{`red`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live noInline\",\n        \"live\": true,\n        \"noInline\": true\n      }}>{`import React from 'react'\nimport { css, ThemeProvider } from 'styled-components'\nimport { Alert } from '@smooth-ui/core-sc'\n\nconst theme = {\n  components: {\n    Alert: p => css\\`\n      color: red;\n    \\`,\n  },\n}\n\nfunction Example() {\n  return <Alert>Hello world</Alert>\n}\n\nrender(\n  <ThemeProvider theme={theme}>\n    <Example />\n  </ThemeProvider>,\n)\n`}</code></pre>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"/smooth-ui/docs/theming/\"\n      }}>{`theming documentation`}</a>{` to learn how to use theme.`}</p>\n    <h2 {...{\n      \"id\": \"local-override-using-css-prop\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#local-override-using-css-prop\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }}><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fillRule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>{`Local override using `}<inlineCode parentName=\"h2\">{`css`}</inlineCode>{` prop`}</h2>\n    <p><a parentName=\"p\" {...{\n        \"href\": \"https://www.styled-components.com/docs/api#css-prop\"\n      }}>{`Styled Components`}</a>{` and `}<a parentName=\"p\" {...{\n        \"href\": \"https://emotion.sh/docs/css-prop\"\n      }}>{`Emotion`}</a>{` both support the `}<inlineCode parentName=\"p\">{`css`}</inlineCode>{` property. This is a simple method to extend component style.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\"\n      }}>{`<Button\n  css={css\\`\n    font-size: 20px;\n  \\`}\n>\n  A customized button\n</Button>\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"local-extend-using-styled\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#local-extend-using-styled\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }}><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fillRule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>{`Local extend using styled`}</h2>\n    <p>{`You can override any CSS property of the original component using `}<inlineCode parentName=\"p\">{`styled`}</inlineCode>{`. It creates a new component and doesn't affect other components.`}</p>\n    <p>{`An example of a `}<inlineCode parentName=\"p\">{`BorderedButton`}</inlineCode>{` extended from a `}<inlineCode parentName=\"p\">{`Button`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live noInline\",\n        \"live\": true,\n        \"noInline\": true\n      }}>{`import React from 'react'\nimport styled from 'styled-components'\nimport { Button } from '@smooth-ui/core-sc'\n\nconst BorderedButton = styled(Button)\\`\n  border: 2px solid black;\n\n  &:hover {\n    border-color: blue;\n  }\n\\`\n\nfunction Example() {\n  return <BorderedButton>Hello world</BorderedButton>\n}\n\nrender(<Example />)\n`}</code></pre>\n    <h2 {...{\n      \"id\": \"extend-components-deeply\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#extend-components-deeply\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }}><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fillRule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>{`Extend components deeply`}</h2>\n    <p>{`Some components are more complex than a `}<inlineCode parentName=\"p\">{`Button`}</inlineCode>{`. The `}<inlineCode parentName=\"p\">{`Switch`}</inlineCode>{` for example is a component that includes several elements: a container, a ball... All of these elements have their own classes. To extend it, just use the browser inspector, pick the class and override it 👌.`}</p>\n    <p>{`An example of a custom `}<inlineCode parentName=\"p\">{`Switch`}</inlineCode>{` with a black ball 🎱.`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live noInline\",\n        \"live\": true,\n        \"noInline\": true\n      }}>{`import React from 'react'\nimport styled from 'styled-components'\nimport { Switch, useCheckboxState } from '@smooth-ui/core-sc'\n\nconst BlackBallSwitch = styled(Switch)\\`\n  [data-switch-ball] {\n    background-color: black !important;\n  }\n\\`\n\nfunction Example() {\n  const checkbox = useCheckboxState()\n  return <BlackBallSwitch {...checkbox} />\n}\n\nrender(<Example />)\n`}</code></pre>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}