{"version":3,"sources":["webpack:///./node_modules/smooth-doc/src/layouts/docs.js","webpack:///./src/pages/docs/dark-mode.mdx"],"names":["_frontmatter","layoutProps","MDXLayout","DefaultLayout","MDXContent","components","props","mdxType","parentName","aria-hidden","height","version","viewBox","width","fillRule","d","isMDXComponent"],"mappings":"4FAAA,qD,sNCMO,IAAMA,EAAe,GAOtBC,EAAc,CAClBD,gBAEIE,EAAYC,IACH,SAASC,EAAT,GAGZ,IAFDC,EAEC,EAFDA,WACGC,E,oIACF,mBACD,OAAO,YAACJ,EAAD,iBAAeD,EAAiBK,EAAhC,CAAuCD,WAAYA,EAAYE,QAAQ,cAG5E,iBAAQ,CACN,GAAM,aACL,+BAAGC,WAAW,MAAS,CACtB,KAAQ,aACR,eAAe,EACf,UAAa,WACZ,mBAAKC,cAAY,OAAOC,OAAO,KAAKC,QAAQ,MAAMC,QAAQ,YAAYC,MAAM,MAAK,oBAAMC,SAAS,UAAUC,EAAE,oVANjH,aAOA,gGACA,iBAAQ,CACN,GAAM,gCACL,+BAAGP,WAAW,MAAS,CACtB,KAAQ,gCACR,eAAe,EACf,UAAa,WACZ,mBAAKC,cAAY,OAAOC,OAAO,KAAKC,QAAQ,MAAMC,QAAQ,YAAYC,MAAM,MAAK,oBAAMC,SAAS,UAAUC,EAAE,oVANjH,gCAOA,sCAAqB,+BAAGP,WAAW,KAAQ,CACvC,KAAQ,sEADS,kDAArB,yLAGA,uCAAsB,+BAAGA,WAAW,KAAQ,CACxC,KAAQ,iGADU,OAET,0BAAYA,WAAW,KAAvB,uBAFS,OAE8D,0BAAYA,WAAW,KAAvB,SAF9D,kBAAtB,KAGA,iBAAQ,CACN,GAAM,iCACL,+BAAGA,WAAW,MAAS,CACtB,KAAQ,iCACR,eAAe,EACf,UAAa,WACZ,mBAAKC,cAAY,OAAOC,OAAO,KAAKC,QAAQ,MAAMC,QAAQ,YAAYC,MAAM,MAAK,oBAAMC,SAAS,UAAUC,EAAE,oVANjH,iCAOA,qEAAoD,0BAAYP,WAAW,KAAvB,qBAApD,KACA,uBAAK,kCAAMA,WAAW,OAAU,CAC5B,UAAa,eACb,WAAc,gBACd,MAAQ,EACR,UAAY,IAJX,icA4BL,4BAAW,+BAAGA,WAAW,KAAQ,CAC7B,KAAQ,6BADD,yBAAX,MAOJJ,EAAWY,gBAAiB","file":"component---src-pages-docs-dark-mode-mdx-ef74aa2f171180493069.js","sourcesContent":["/* eslint-disable */\nexport { DocLayout as default } from '../components';","import React from 'react'\n  /* @jsx mdx */\nimport { mdx } from '@mdx-js/react';\n/* @jsx mdx */\n\nimport DefaultLayout from \"/home/gajewsky/code/smooth-ui/website/node_modules/smooth-doc/src/layouts/docs.js\";\nexport const _frontmatter = {};\n\nconst makeShortcode = name => function MDXDefaultShortcode(props) {\n  console.warn(\"Component \" + name + \" was not imported, exported, or provided by MDXProvider as global scope\");\n  return <div {...props} />;\n};\n\nconst layoutProps = {\n  _frontmatter\n};\nconst MDXLayout = DefaultLayout;\nexport default function MDXContent({\n  components,\n  ...props\n}) {\n  return <MDXLayout {...layoutProps} {...props} components={components} mdxType=\"MDXLayout\">\n\n\n    <h1 {...{\n      \"id\": \"dark-mode\"\n    }}><a parentName=\"h1\" {...{\n        \"href\": \"#dark-mode\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }}><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fillRule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>{`Dark Mode`}</h1>\n    <p>{`Dark Mode is built-in Smooth UI, every components have their dark mode.`}</p>\n    <h2 {...{\n      \"id\": \"use-with-xstyled-color-modes\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#use-with-xstyled-color-modes\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }}><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fillRule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>{`Use with xstyled color modes`}</h2>\n    <p>{`xstyled has a `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.smooth-code.com/open-source/xstyled/docs/color-modes/\"\n      }}>{`built-in support for color modes and dark mode`}</a>{`. If you use it, Smooth UI is already compatible except one thing: custom properties. Smooth UI is very dynamic and it is yet possible to achieve everything using custom properties.`}</p>\n    <p>{`To disable it, `}<a parentName=\"p\" {...{\n        \"href\": \"https://www.smooth-code.com/open-source/xstyled/docs/color-modes/#turn-off-custom-properties\"\n      }}>{`set `}<inlineCode parentName=\"a\">{`useCustomProperties`}</inlineCode>{` to `}<inlineCode parentName=\"a\">{`false`}</inlineCode>{` in your theme`}</a>{`.`}</p>\n    <h2 {...{\n      \"id\": \"use-dark-mode-without-xstyled\"\n    }}><a parentName=\"h2\" {...{\n        \"href\": \"#use-dark-mode-without-xstyled\",\n        \"aria-hidden\": true,\n        \"className\": \"anchor\"\n      }}><svg aria-hidden=\"true\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fillRule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>{`Use dark mode without xstyled`}</h2>\n    <p>{`To enable dark mode, add a theme and specify `}<inlineCode parentName=\"p\">{`colorMode: 'dark'`}</inlineCode>{`:`}</p>\n    <pre><code parentName=\"pre\" {...{\n        \"className\": \"language-jsx\",\n        \"metastring\": \"live noInline\",\n        \"live\": true,\n        \"noInline\": true\n      }}>{`import React from 'react'\nimport { ThemeProvider } from 'styled-components'\nimport { Alert } from '@smooth-ui/core-sc'\n\nconst darkTheme = {\n  colorMode: 'dark',\n}\n\nconst lightTheme = {\n  colorMode: 'light',\n}\n\nrender(\n  <div>\n    <ThemeProvider theme={darkTheme}>\n      <Alert>Dark Alert</Alert>\n    </ThemeProvider>\n    <ThemeProvider theme={lightTheme}>\n      <Alert>Light Alert</Alert>\n    </ThemeProvider>\n  </div>,\n)\n`}</code></pre>\n    <p>{`See `}<a parentName=\"p\" {...{\n        \"href\": \"/smooth-ui/docs/theming/\"\n      }}>{`theming documentation`}</a>{`.`}</p>\n\n    </MDXLayout>;\n}\n;\nMDXContent.isMDXComponent = true;\n      "],"sourceRoot":""}